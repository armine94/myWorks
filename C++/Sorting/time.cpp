#include <chrono>
#include <ctime>
#include <iostream>

template <typename Duration>
void print_time(tm t, Duration fraction) {
    using namespace std::chrono;
    std::printf("[%04u-%02u-%02u %02u:%02u:%02u.%03u]\n", t.tm_year + 1900,
                t.tm_mon + 1, t.tm_mday, t.tm_hour, t.tm_min, t.tm_sec,
                static_cast<unsigned>(fraction / milliseconds(1)));

    // VS2013's library has a bug which may require you to replace
    // "fraction / milliseconds(1)" with
    // "duration_cast<milliseconds>(fraction).count()"
}


void printArray(int *array, int n) {
    for (int i = 0; i < n; ++i){
        std::cout << array[i] << "\t";
    }
}

// Merges two subarrays of array[].
// First subarray is array[low..mid]
// Second subarray is array[mid+1..high]
void merge(int *array, int low, int mid, int high)
{
    //create temp array
    int temp[high + 1];
    int i = low;
    int j = mid + 1;
    int k = 0;

    //Merge the temp arrays back into arr[l..r]
    while (i <= mid && j <= high)
    {
        if (array[i] <= array[j]) {
            temp[k++] = array[i++];
        }
        else {
            temp[k++] = array[j++];
        }
    }

    // Copy the remaining elements , if there are any
    while (i <= mid) {
        temp[k++] = array[i++];
    }

    while (j <= high) {
        temp[k++] = array[j++];
    }

    k--;
    while (k >= 0) {
        array[k + low] = temp[k];
        k--;
    }
}

// low is for left index and high is right index of the
 //  sub-array of array to be sorted
void mergeSort(int *array, int low, int high) {
    int mid;

    if (low < high) {
        // Same as (low + high)/2, but avoids overflow for
        // large low and high
        mid = (low + high) / 2;

        // Sort first and second halves
        mergeSort(array, low, mid);
        mergeSort(array, mid + 1, high);

        //recursive call
        merge(array, low, mid, high);
    }
}

void swap(int *xp, int *yp) {
    int temp = *xp;
    *xp = *yp;
    *yp = temp;
}

void selectionSort(int arr[], int n) {
    int i, j, min_idx;

    // One by one move boundary of unsorted subarray
    for (i = 0; i < n-1; i++) {
        // Find the minimum element in unsorted array
        min_idx = i;
        for (j = i+1; j < n; j++) {
            if (arr[j] < arr[min_idx]) {
                min_idx = j;
            }
        }

        // Swap the found minimum element with the first element
        swap(&arr[min_idx], &arr[i]);
    }
}

int main() {
    int array[] = {95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 4895, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 4895, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 4895, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 4895, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 4895, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 4895, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 4895, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 4895, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 4895, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48};
    int newArray[] = {95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 4895, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 4895, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 4895, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 4895, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 4895, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 4895, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 4895, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 4895, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 4895, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48, 98, 1, 485, 65, 478, 1, 2325,95, 45, 48};
    int n = sizeof(array)/sizeof(array[0]);
    int m = sizeof(newArray)/sizeof(newArray[0]);

    int startTime, finishTime, mergeWorkingTime, selectionWorkingTime;
    using namespace std;
    using namespace std::chrono;

    system_clock::time_point now = system_clock::now();
    system_clock::duration tp = now.time_since_epoch();

    tp -= duration_cast<seconds>(tp);

    time_t tt = system_clock::to_time_t(now);

    std::cout << "============================Merge Sort================================================" << std::endl;

    std::cout << "Start Merge Sort in:  ";
    startTime = static_cast<unsigned>(tp / milliseconds(1));
    print_time(*localtime(&tt), tp);
    mergeSort(array, 0, n - 1);
    now = system_clock::now();
    tp = now.time_since_epoch();
    tp -= duration_cast<seconds>(tp);
    tt = system_clock::to_time_t(now);
    std::cout << "Finish Merge Sort in: ";
    print_time(*localtime(&tt), tp);
    finishTime = static_cast<unsigned>(tp / milliseconds(1));
    mergeWorkingTime = finishTime - startTime;
    std::cout<< "Merge Sort working time is: " << mergeWorkingTime <<  " milliseconds" << std::endl << std::endl;

    std::cout << "============================Selection Sort================================================" << std::endl;

    std::cout << "Start Selection Sort in:  ";
    startTime = static_cast<unsigned>(tp / milliseconds(1));
    print_time(*localtime(&tt), tp);
    selectionSort(newArray, m - 1);
    now = system_clock::now();
    tp = now.time_since_epoch();
    tp -= duration_cast<seconds>(tp);
    tt = system_clock::to_time_t(now);
    std::cout << "Finish Selection Sort in: ";
    print_time(*localtime(&tt), tp);
    finishTime = static_cast<unsigned>(tp / milliseconds(1));
    selectionWorkingTime = finishTime - startTime;
    std::cout<< "Selection Sort working time is: " << mergeWorkingTime <<  " milliseconds" << std::endl;

    std::cout << std::endl;
    if(mergeWorkingTime > selectionWorkingTime) {
        std::cout << "Merge Sort sorted array faster than Selection Sort " << std::endl;
    } else if(mergeWorkingTime < selectionWorkingTime) {
        std::cout << "Selection Sort sorted array faster than Merge Sort " << std::endl;
    } else {
        std::cout << "Merge Sort and Selection Sort sorted array at the same time" << std::endl;
    }
}